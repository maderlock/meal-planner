// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model representing application users
model User {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  firebaseUid   String         @unique @map("firebase_uid")
  email         String         @unique
  username      String         @unique
  name          String?
  createdAt     DateTime       @default(now()) @db.Timestamptz
  updatedAt     DateTime       @updatedAt @db.Timestamptz
  favoriteMeals FavoriteMeal[]
  weeklyPlans   WeeklyPlan[]

  @@map("users")
}

// Meal model representing individual meals
model Meal {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String
  description  String?
  ingredients  String[]
  instructions String[]
  imageUrl     String?        @map("image_url")
  createdAt    DateTime       @default(now()) @db.Timestamptz
  updatedAt    DateTime       @updatedAt @db.Timestamptz
  favorites    FavoriteMeal[]
  assignments  MealAssignment[]

  @@map("meals")
}

// FavoriteMeal model representing user's favorite meals
model FavoriteMeal {
  userId    String   @map("user_id") @db.Uuid
  mealId    String   @map("meal_id") @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  meal      Meal     @relation(fields: [mealId], references: [id], onDelete: Cascade)

  @@id([userId, mealId])
  @@map("favorite_meals")
}

// WeeklyPlan model representing a user's meal plan for a week
model WeeklyPlan {
  id            String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId        String           @map("user_id") @db.Uuid
  weekStartDate DateTime         @map("week_start_date") @db.Timestamptz
  createdAt     DateTime         @default(now()) @db.Timestamptz
  updatedAt     DateTime         @updatedAt @db.Timestamptz
  mealPlans     MealAssignment[]
  user          User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("weekly_plans")
}

// MealAssignment model representing a meal assigned to a specific day and type
model MealAssignment {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  weeklyPlanId String     @map("weekly_plan_id") @db.Uuid
  mealId       String     @map("meal_id") @db.Uuid
  dayOfWeek    Int        @map("day_of_week")
  mealType     String
  createdAt    DateTime   @default(now()) @db.Timestamptz
  updatedAt    DateTime   @updatedAt @db.Timestamptz
  weeklyPlan   WeeklyPlan @relation(fields: [weeklyPlanId], references: [id], onDelete: Cascade)
  meal         Meal       @relation(fields: [mealId], references: [id], onDelete: Cascade)

  @@map("meal_assignments")
}
