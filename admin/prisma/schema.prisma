/**
 * Meal Planner Database Schema
 * 
 * This schema defines the core data structures for the Meal Planner application.
 * It includes models for user management, meal planning, and recipe organization.
 * 
 * Key Models:
 * - User: Manages user accounts and authentication
 * - Meal: Represents individual meals/recipes
 * - WeeklyPlan: Organizes meal assignments for the week
 * - MealAssignment: Links meals to specific days in weekly plans
 * - Favorite: Tracks user's favorite meals
 * 
 * Used By:
 * - Admin API routes for data management
 * - Mobile app through API integration
 * - Authentication system for user management
 * 
 * Database: PostgreSQL (Production), SQLite (Development)
 */

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model representing application users
model User {
  id              String    @id @default(cuid()) @db.Uuid
  firebaseUid     String    @unique @map("firebase_uid")
  email           String    @unique
  username        String    @unique
  name            String?
  password        String
  displayName     String?
  photoUrl        String?
  emailVerified   Boolean   @default(false)
  resetToken      String?
  resetTokenExpiry DateTime?
  createdAt       DateTime  @default(now()) @db.Timestamptz
  updatedAt       DateTime  @updatedAt @db.Timestamptz
  favoriteMeals   FavoriteMeal[]
  weeklyPlans     WeeklyPlan[]

  @@map("users")
}

// Meal model representing individual meals
model Meal {
  id           String    @id @default(cuid()) @db.Uuid
  name         String
  description  String
  ingredients  String[]
  instructions String[]
  imageUrl     String    @map("image_url")
  createdAt    DateTime  @default(now()) @db.Timestamptz
  updatedAt    DateTime  @updatedAt @db.Timestamptz
  assignments  MealAssignment[]
  favorites    FavoriteMeal[]

  @@map("meals")
}

// FavoriteMeal model representing user's favorite meals
model FavoriteMeal {
  userId    String   @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  mealId    String   @map("meal_id") @db.Uuid
  meal      Meal     @relation(fields: [mealId], references: [id])
  createdAt DateTime @default(now()) @db.Timestamptz

  @@id([userId, mealId])
  @@index([userId])
  @@index([mealId])
  @@map("favorite_meals")
}

// WeeklyPlan model representing a user's meal plan for a week
model WeeklyPlan {
  id            String    @id @default(cuid()) @db.Uuid
  userId        String    @map("user_id") @db.Uuid
  user          User      @relation(fields: [userId], references: [id])
  weekStartDate DateTime   @map("week_start_date") @db.Timestamptz
  endDate       DateTime
  createdAt     DateTime   @default(now()) @db.Timestamptz
  updatedAt     DateTime   @updatedAt @db.Timestamptz
  mealPlans     MealAssignment[]
  
  @@index([userId])
  @@map("weekly_plans")
}

// MealAssignment model representing a meal assigned to a specific day and type
model MealAssignment {
  id           String     @id @default(cuid()) @db.Uuid
  weeklyPlanId String     @map("weekly_plan_id") @db.Uuid
  weeklyPlan   WeeklyPlan @relation(fields: [weeklyPlanId], references: [id])
  mealId       String     @map("meal_id") @db.Uuid
  meal         Meal       @relation(fields: [mealId], references: [id])
  dayOfWeek    Int        @map("day_of_week")
  mealType     String     // breakfast, lunch, dinner
  createdAt    DateTime   @default(now()) @db.Timestamptz
  updatedAt    DateTime   @updatedAt @db.Timestamptz

  @@index([weeklyPlanId])
  @@index([mealId])
  @@map("meal_assignments")
}
